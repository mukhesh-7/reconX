vuln-monitoring-app/
├── backend/                          # Python backend (FastAPI + Scrapers)
│   ├── app/
│   │   ├── __init__.py
│   │   ├── main.py                   # FastAPI app entry point
│   │   ├── config.py                 # App settings (URLs, email, DB)
│   │   ├── models/                   # Database ORM models
│   │   │   └── vulnerability.py
│   │   ├── scrapers/                 # OEM-specific scraping modules
│   │   │   ├── __init__.py
│   │   │   ├── cisco_scraper.py
│   │   │   └── microsoft_scraper.py
│   │   ├── utils/                    # Utility functions
│   │   │   ├── emailer.py
│   │   │   ├── deduplicate.py
│   │   │   └── scheduler.py
│   │   ├── database.py              # DB setup and session
│   │   └── schemas.py               # Pydantic models for API I/O
│   ├── requirements.txt             # Backend dependencies
│   └── run.py                       # Dev server launcher
│
├── frontend/                         # React frontend (UI Dashboard)
│   ├── public/
│   ├── src/
│   │   ├── components/
│   │   │   ├── Dashboard.jsx
│   │   │   └── Navbar.jsx
│   │   ├── pages/
│   │   │   └── Home.jsx
│   │   ├── App.js
│   │   ├── api.js                   # Axios or fetch wrappers
│   │   └── index.js
│   ├── tailwind.config.js
│   ├── postcss.config.js
│   ├── package.json
│   └── .env
│
├── database/
│   └── init.sql                     # (optional) DB schema for PostgreSQL
├── .env                             # Global config (mail, db, etc.)
├── .gitignore
├── docker-compose.yml               # For containerized deployment (optional)
├── README.md


# ReconX
Frontend:       React / HTML + Tailwind
Backend:        Python (Flask or FastAPI)
Scraper/API:    NVD API, CISA feeds, Vendor Security Pages
Database:       MongoDB / PostgreSQL
Deployment:     Render / Vercel / Heroku / Docker


User Input (Asset list) ─┬──▶ Query API (NVD) ─┬──▶ Match relevant CVEs
                         │                    │
                         │                    └──▶ Store as CSV/Excel/DB
                         │
                         └──▶ Frontend UI ───▶ Display + Export + Notify